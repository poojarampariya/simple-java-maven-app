pipeline {
    agent {
        docker {
            image 'maven:3-alpine'
            args '-v /root/.m2:/root/.m2'
        }
    }
    environment {
        String result='0.0.0';
    }
    stages {
        stage('Git Checkout'){
            steps{
                // sh 'git config --global user.email "pujarampariya@example.com"'
                // sh 'git config --global user.name "poojarampariya"'
               checkout([$class: 'GitSCM',
               branches: [[name: 'tag2']], 
               extensions: [[$class: 'PerBuildTag'], 
               [$class: 'UserIdentity', email: 'pujarampariya@gmail.com', name: 'poojarampariya']], 
               userRemoteConfigs: [[credentialsId: 'jenkins-git-ssh', 
               url: 'git@github.com:poojarampariya/simple-java-maven-app.git']]])
               resolveScm source: [$class: 'GitSCMSource', 
               credentialsId: 'jenkins-git-ssh', 
               id: '_', remote: 'git@github.com:jenkins-docs/simple-java-maven-app.git', 
               traits: [gitBranchDiscovery(), gitTagDiscovery()]], targets: ['']
            }
        }
        stage('Build') {
            steps {
                sh 'mvn -B -DskipTests clean package'
                // sh "git tag build_${gitCommit}"
            }
        }
        stage('Test') {
            steps {
                sh 'mvn test'
            }
            post {
                always {
                    junit 'target/surefire-reports/*.xml'
                }
            }
        }
        stage('Deliver') {
            steps {
                sh './jenkins/scripts/deliver.sh'
            }
        }
    }
}
